rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    // Global helper functions
    function isSignedIn() {
      return request.auth != null;
    }

    function isOwnerRole() {
      return isSignedIn() && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'OWNER';
    }

    // Rules for the 'users' collection
    match /users/{userId} {
      function isOwnProfile() {
        return request.auth.uid == userId;
      }
      allow get: if isSignedIn() && (isOwnProfile() || isOwnerRole());
      allow list: if isOwnerRole();
      allow create: if isSignedIn() && isOwnProfile();
      allow update: if isSignedIn() && (isOwnProfile() || isOwnerRole());
      allow delete: if isOwnerRole();
    }

    // Rules for the 'masters' collection
    match /masters/{masterId} {
      allow get: if isSignedIn();
      allow list: if isOwnerRole();
      allow write: if isOwnerRole();
    }

    // Rules for the 'work-orders' collection
    match /work-orders/{workOrderId} {
      allow get: if isSignedIn();
      allow list: if isOwnerRole();
      allow write: if isOwnerRole();
    }

    // ADDED: Rules for the 'clients' collection
    match /clients/{clientId} {
      allow get: if isSignedIn();
      allow list: if isOwnerRole();
      allow write: if isOwnerRole();
    }
  }
}
