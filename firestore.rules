/**
 * @fileoverview Firestore Security Rules
 *
 * Core Philosophy:
 * This ruleset provides open access to all data for prototyping purposes,
 * while still requiring users to be signed in (either anonymously or with a password).
 * This allows for rapid development without authentication barriers,
 * while ensuring basic user tracking is in place.
 *
 * Data Structure:
 * The database has no defined structure or entities, implying a flat structure with
 * no specific ownership or relational constraints.
 *
 * Key Security Decisions:
 * - Open read access to all data.
 * - Signed-in user required for all write operations.
 * - No ownership or role-based restrictions are enforced during this phase.
 */
rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    // Allow read/write access to all documents if the user is authenticated.
    match /{document=**} {
      allow read: if true;
      allow create: if isSignedIn();
      allow update: if isSignedIn();
      allow delete: if isSignedIn();
    }

    // Helper function to determine if a user is signed in.
    function isSignedIn() {
      return request.auth != null;
    }
  }
}